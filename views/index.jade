extends layout

block content
	script(src="/socket.io/socket.io.js")
	script(src="javascripts/jscolor.js")
	script(src="javascripts/index_client.js")
	link(href='stylesheets/index.css', rel='stylesheet')
	script.
		document.addEventListener('DOMContentLoaded', function() {
			onLoadFunction();
		}, false);

	h1= title
	p Welcome to #{title}
	button(onclick='start()') Start
	button(onclick='stop()') Stop
	button(onclick='pause()') Pause
	button(onclick='setRGB(0xFF,0,0)') Set red
	button(onclick='setRGB(0,0xFF,0)') Set green
	button(onclick='setRGB(0,0,0xFF)') Set blue
	button(onclick='slideRGB(0xFF,0,0)') Slide red
	button(onclick='slideRGB(0,0xFF,0)') Slide green
	button(onclick='slideRGB(0,0,0xFF)') Slide blue
	button(onclick='queueSlideRGB(0,0xFF,0,0,0,0xFF,1000,4,1)') Queue Slide green blue
	section#secCommands.p Commands
		.commandContainer
			button#buttonSendSettings(onclick="sendSettings()") Send Settings
			button#buttonAppendSettings(onclick="appendSettings()") Append Settings
			button#buttonStart(onclick="start()") Start
			button#buttonStop(onclick="stop()") Stop
			button#buttonPause(onclick="pause()") Pause
	section#secPreview.p Preview
		.previewContainer
			.scrollable
				input#queueCount(type="hidden", value="0")
				#divQueue.flex
					div#anEl1.animationElement(onclick="loadAnimation(this)", style="background-image: linear-gradient(to right, rgb(255,0,0), rgb(0,255,0)); ")
						input#del1.delButton(type="button", onclick="this.parentNode.parentNode.removeChild(this.parentNode);", value="X")
						input.id.hidden(name="Id", type="number", value=1)
						input#t1.hidden(name="Duration", type="number", value=10)
						input#p1.hidden(name="On-Time", type="number", value=10)
						input#nr1.hidden(name="Repititions", type="number", value=10)
						input#br1.hidden(name="Re-Queue", type="number", value=1)
						input#c1r1.hidden(name="Color1R", type="number", value=255)
						input#c1g1.hidden(name="Color1G", type="number", value=0)
						input#c1b1.hidden(name="Color1B", type="number", value=0)
						input#c2r1.hidden(name="Color2R", type="number", value=0)
						input#c2g1.hidden(name="Color2G", type="number", value=255)
						input#c2b1.hidden(name="Color2B", type="number", value=0)
						input#mode1.hidden(name="Mode", type="number", value=1)
					div#anEl2.animationElement(style="background-image: linear-gradient(to right, #FFFF00 20%, #00FFFF 80%); ")
						input(type="button", value="X", style="position:absolute;top:0;right:0;")
						input.id.hidden(name="Id", type="number", value=2)
						input#t2.hidden(name="Duration", type="number", value=100)
					div#anEl3.animationElement(style="background-image: linear-gradient(to right, #FFFF00 20%, #00FFFF 0); ")
						input(type="button", value="X", style="position:absolute;top:0;right:0;")
						input.id.hidden(name="Id", type="number", value=3)
						input#t3.hidden(name="Duration", type="number", value=1000)
					button#colorInputAdd(onclick="addAnimation(getAnimationData())") Add
	section#secColors.p Colors
		table#tableColors
			tr
				td
					input#colorInput1.colorInput
				td
					button#buttonColorSwitch(onclick="switchColorInputs()") Switch
				td
					input#colorInput2.colorInput
			tr
				td
					button#buttonColor1First First					
					button#buttonColor1Previous Previous
					button#buttonColor1Next Next
					button#buttonColor1Last Last
				td
				td
					button#buttonColor2First First				
					button#buttonColor2Previous Previous
					button#buttonColor2Next Next
					button#buttonColor2Last Last
	section#secMode.p Mode
		table#tableMode
			tr
				td
					input#radioMode0(type="radio", name="radioMode", value="0", checked="true")
					label Jump
				td
					input#radioMode1(type="radio", name="radioMode", value="1")
					label Fade
			tr
				td
					input#radioMode2(type="radio", name="radioMode", value="2")
					label Strobe
				td
					input#radioMode3(type="radio", name="radioMode", value="3")
					label Pulse
	section#secEffectTime.p
		table#tableTime
			tr
				td
					label Duration
				td(allign-items="center")
					input#rangeDuration(type="range", value=78, min=0, max=100, onchange="this.parentElement.nextElementSibling.childNodes[0].value=Math.round(logslDur.value(this.value)*100)/100")
				td
					input#numberDuration(type="number", value=10, min=0.01, max=65.535, step=0.1, onchange="this.parentElement.previousElementSibling.childNodes[0].value=logslDur.position(this.value)")
				td
					label s
			tr#trPercOn
				td
					label On-Time
				td
					input#rangePercOn(type="range", min=0, max=100, value=50, onchange="this.parentElement.nextElementSibling.childNodes[0].value=this.value")
				td
					input#numberPercOn(type="number", min=0, max=100, value=50, onchange="this.parentElement.nextElementSibling.childNodes[0].value=this.value")
				td
					label %
			tr
				td
					label Repititions
				td
					input#rangeNumRep(type="range", min=0, max=100, value=0, onchange="this.parentElement.nextElementSibling.childNodes[0].value=Math.round(logslRep.value(this.value))-1")
				td
					input#numberNumRep(type="number", min=0, max=255, value=0, onchange="this.parentElement.nextElementSibling.childNodes[0].value=logslRep.position(this.value)")
				td
					label 
			tr
				td
					label Re-Queue
				td
					input#checkReQueue(type="checkbox")
		table
			tr
				td
					button Apply
				td
					button Send now
				td
					button Reset
		
		
		