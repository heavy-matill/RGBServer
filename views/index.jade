extends layout

block content
	script(src="/socket.io/socket.io.js")
	script.
		//var socket = io.connect('http://localhost:3000');		
		var socket = io.connect(window.location.search.split("/")[0]);
		socket.emit("mqttPublish", {"topic": "presence", "message": "Message from web"});
		function start(){			
			socket.emit("mqttPublish", {"topic": "rgb", "message": String.fromCharCode(0x00)});
		}
		function stop(){			
			socket.emit("mqttPublish", {"topic": "rgb", "message": String.fromCharCode(0x01)});
		}
		function pause(){			
			socket.emit("mqttPublish", {"topic": "rgb", "message": String.fromCharCode(0x02)});
		}
		function setRGB(r,g,b){			
			//socket.emit("mqttPublish", {"topic": "rgb", "message": String.fromCharCode(0x0A,r,g,b)});
			socket.emit("mqttPublishBytes", {"topic": "rgb", "bytes": [0x10,r,g,b]});
		}
		function slideRGB(r,g,b){			
			//socket.emit("mqttPublish", {"topic": "rgb", "message": String.fromCharCode(0x0A,r,g,b)});
			socket.emit("mqttPublishBytes", {"topic": "rgb", "bytes": [0x11,r,g,b]});
		}
		function queueSlideRGB(r1,g1,b1,r2,g2,b2,t,n_rep,b_rep){			
			//socket.emit("mqttPublish", {"topic": "rgb", "message": String.fromCharCode(0x0A,r,g,b)});
			socket.emit("mqttPublishBytes", {"topic": "rgb", "bytes": [0x14,r1,g1,b1,r2,g2,b2,t>>8,t-(t>>8),n_rep,b_rep]});
		}
	h1= title
	p Welcome to #{title}
	button(onclick='start()') Start
	button(onclick='stop()') Stop
	button(onclick='pause()') Pause
	button(onclick='setRGB(0xFF,0,0)') Set red
	button(onclick='setRGB(0,0xFF,0)') Set green
	button(onclick='setRGB(0,0,0xFF)') Set blue
	button(onclick='slideRGB(0xFF,0,0)') Slide red
	button(onclick='slideRGB(0,0xFF,0)') Slide green
	button(onclick='slideRGB(0,0,0xFF)') Slide blue
	button(onclick='queueSlideRGB(0,0xFF,0,0,0,0xFF,1000,4,1)') Queue Slide green blue
	section#sectionCommands.p Commands
		.commandContainer
			button#buttonSendSettings(onclick="sendSettings()") Send Settings
			button#buttonAppendSettings(onclick="appendSettings()") Append Settings
			button#buttonStart(onclick="start()") Start
			button#buttonStop(onclick="stop()") Stop
			button#buttonPause(onclick="pause()") Pause
	section#divPreview.p Preview
		.previewContainer
			.scrollable
				input#queueCount(type="hidden", value="0")
				#divQueue.flex
			button.colorInputAdd(onclick="addSameElemet()") Add
	section#divMode.p Mode
		table#tableMode
			tr
				td
					input#radioMode(type="radio", name="mode", value="0")
					label Jump
				td
					input#radioMode(type="radio", name="mode", value="1")
					label Fade
			tr
				td
					input#radioMode(type="radio", name="mode", value="2")
					label Strobe
				td
					input#radioMode(type="radio", name="mode", value="3")
					label Pulse
	section#divEffectTime.p
		table#tableTime
			tr
				td
					label Effect Time
				td
					input(type="range")
				td
					input(type="number")
			tr
				td
					label Holding Time
				td
					input(type="range")
				td
					input(type="number")					